{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","uuid_v4","Section","title","children","className","Notification","message","App","state","handleIncrement","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","this","objKey","Object","keys","Component","ReactDOM","render","document","querySelector"],"mappings":"yNA0BeA,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,0CAAaJ,KACb,uBACA,6CAAgBC,KAChB,uBACA,yCAAYC,KACZ,uBACA,2CAAcC,KACd,uBACA,uDAA0BC,EAA1B,Y,QCWSC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,GALII,qBCMAC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAU,UAAf,UACE,6BAAKF,IACJC,MCOQE,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,6BAAKA,OCAUC,E,4MACnBC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,gBAAkB,SAAAC,GAAM,IACdZ,EAASY,EAAEC,OAAXb,KACR,EAAKc,UAAS,SAAAC,GACZ,OAAO,eACJf,EAAOe,EAAUf,GAAQ,O,EAKhCgB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MAGpC,OAJyB,EACjBrB,KADiB,EACXC,QADW,EACFC,K,EAOzB0B,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKT,MAAdrB,KAC0B6B,EAClC,OAAOE,KAAKC,MAAMF,I,uDAGV,IAAD,EACwBG,KAAKZ,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ8B,KAAKN,qBACbvB,EAAqB6B,KAAKL,kCAC1BM,EAASC,OAAOC,KAAKH,KAAKZ,OAChC,OACE,qCACE,cAAC,EAAD,CAASN,MAAM,6BAAf,SACE,cAAC,EAAD,CACET,QAAS4B,EACT3B,gBAAiB0B,KAAKX,oBAGf,IAAVnB,EACD,cAAC,EAAD,CAAcgB,QAAQ,sBAEtB,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GArDCiC,aCFjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.f570a47a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <span>Good: {good}</span>\n      <br />\n      <span>Neutral: {neutral}</span>\n      <br />\n      <span>Bad: {bad}</span>\n      <br />\n      <span>Total: {total}</span>\n      <br />\n      <span>Positive feedback: {positivePercentage} %</span>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport { v4 as uuid_v4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          key={uuid_v4()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className=\"Section\">\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n    </>\n  );\n};\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    const { name } = e.target;\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    // const total = Object.values(this.state).reduce()\n    return result;\n    // return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n        ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}